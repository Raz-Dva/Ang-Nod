{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cars-pipe/cars-pipe.component.css","webpack:///./src/app/cars-pipe/cars-pipe.component.html","webpack:///./src/app/cars-pipe/cars-pipe.component.ts","webpack:///./src/app/cars-pipe/pow.pipe.ts","webpack:///./src/app/colors/colors.component.html","webpack:///./src/app/colors/colors.component.ts","webpack:///./src/app/dynamic-pipe/dynamic-pipe.pipe.ts","webpack:///./src/app/form/form.component.html","webpack:///./src/app/form/form.component.ts","webpack:///./src/app/input-test/car/car.component.html","webpack:///./src/app/input-test/car/car.component.ts","webpack:///./src/app/input-test/cars/cars.component.html","webpack:///./src/app/input-test/cars/cars.component.ts","webpack:///./src/app/input-test/form-add-item/form-add-item.component.html","webpack:///./src/app/input-test/form-add-item/form-add-item.component.ts","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/phoneList/phone-list.component.html","webpack:///./src/app/phoneList/phone-list.component.ts","webpack:///./src/app/product/product-description/product.component.html","webpack:///./src/app/product/product-description/product.component.ts","webpack:///./src/app/product/product-list/product-list.component.html","webpack:///./src/app/product/product-list/product-list.component.ts","webpack:///./src/app/product/product-routing.module.ts","webpack:///./src/app/product/product.module.ts","webpack:///./src/app/reactive-form/reactive-form.component.html","webpack:///./src/app/reactive-form/reactive-form.component.ts","webpack:///./src/app/services/colors-guard.service.ts","webpack:///./src/app/services/colors.service.ts","webpack:///./src/app/services/data-service.service.ts","webpack:///./src/app/services/exit-react-form-guard.service.ts","webpack:///./src/app/services/log-service.service.ts","webpack:///./src/app/services/products.service.ts","webpack:///./src/app/shared/shared.directive.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/table-comands/table-comands.component.html","webpack:///./src/app/table-comands/table-comands.component.ts","webpack:///./src/app/test-component/test-component.html","webpack:///./src/app/test-component/test-component.ts","webpack:///./src/app/test-component/test-service.ts","webpack:///./src/app/test-component/test.directive.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./async-load/async-load.module\": [\n\t\t\"./src/app/async-load/async-load.module.ts\",\n\t\t\"async-load-async-load-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\n\r\nimport { RouterModule, Routes, PreloadAllModules } from '@angular/router';\r\nimport {ReactiveFormComponent } from './reactive-form/reactive-form.component';\r\nimport { TableComandsComponent } from './table-comands/table-comands.component';\r\nimport { ColorsComponent } from './colors/colors.component';\r\n\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { ColorsGuardService } from './services/colors-guard.service';\r\nimport { ExitReactFormGuardService } from './services/exit-react-form-guard.service';\r\nimport { PhoneListComponent } from './phoneList/phone-list.component';\r\nimport { FormComponent } from './form/form.component';\r\nimport { CarsComponent } from './input-test/cars/cars.component';\r\nimport { TestComponent } from './test-component/test-component';\r\nimport { CarsPipeComponent } from './cars-pipe/cars-pipe.component';\r\n\r\nconst appRoutes: Routes=[\r\n  {path: '', component: TableComandsComponent, data: { animation: 'slide1' }},\r\n  {path: 'test', component: TestComponent, data: { animation: 'slide2' }},\r\n  {path: 'decorators', component: CarsComponent, data: { animation: 'slide3' }},\r\n  {path: 'services', component: PhoneListComponent, data: { animation: 'slide4' }},\r\n  {path: 'pipe', component: CarsPipeComponent, data: { animation: 'slide5' }},\r\n  {path: 'colors', component: ColorsComponent, data: { animation: 'slide6' }\r\n   , canActivate:[ColorsGuardService]},\r\n  {path: 'drivenform', component: FormComponent, data: { animation: 'slide7' }},\r\n  {path: 'reactform', component: ReactiveFormComponent,   canDeactivate: [ExitReactFormGuardService],data: { animation: 'slide8' }},\r\n  {path:'lazyRoute', loadChildren:'./async-load/async-load.module#AsyncLoadModule', data: { animation: 'slide9' }} , \r\n \r\n  // canLoad:[] we can add guard  \r\n  {path: 'not-found', component: NotFoundComponent,data: { animation: 'slide10' }},\r\n  {path: '**', redirectTo:'not-found'}\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(appRoutes, {\r\n    preloadingStrategy: PreloadAllModules\r\n  }) ],\r\n  exports: [ RouterModule ]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"wrap\\\">\\r\\n  <main>\\r\\n    <div class=\\\"container\\\">\\r\\n      <!-- ------------ header --------- -->\\r\\n      <ul class=\\\"nav head_nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a\\r\\n            class=\\\"nav-link\\\"\\r\\n            [routerLink]=\\\"''\\\"\\r\\n            routerLinkActive=\\\"active\\\"\\r\\n            [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\r\\n            >npm commands</a\\r\\n          >\\r\\n        \\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a\\r\\n            class=\\\"nav-link\\\"\\r\\n            [routerLink]=\\\"'/decorators'\\\"\\r\\n            routerLinkActive=\\\"active\\\"\\r\\n            >@Input-@Output</a\\r\\n          >\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/services\\\" routerLinkActive=\\\"active\\\">\\r\\n            Services</a\\r\\n          >\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/pipe\\\" routerLinkActive=\\\"active\\\">\\r\\n            Pipe</a\\r\\n          >\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/products\\\">\\r\\n            Products(Routing)\\r\\n          </a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/lazyRoute\\\" routerLinkActive=\\\"active\\\"\\r\\n            >Async load</a\\r\\n          >\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/drivenform\\\" routerLinkActive=\\\"active\\\"\\r\\n            >Driven forms</a\\r\\n          >\\r\\n        </li>\\r\\n\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/reactform\\\" routerLinkActive=\\\"active\\\"\\r\\n            >React Form*</a\\r\\n          >\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/colors\\\" routerLinkActive=\\\"active\\\"\\r\\n            >Colors**</a\\r\\n          >\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"'/test'\\\" routerLinkActive=\\\"active\\\"\\r\\n            >Unit test</a\\r\\n          >\\r\\n        </li>\\r\\n        <li>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn vd_bg-red vd_white nav_button\\\"\\r\\n            (click)=\\\"linkFormComponent()\\\"\\r\\n          >\\r\\n            FormComponent\\r\\n          </button>\\r\\n        </li>        \\r\\n      </ul>\\r\\n      <p>\\r\\n        <span class=\\\"help-inline\\\">* - use Guard canDeactivate</span>\\r\\n      </p>\\r\\n      <p>\\r\\n        <span class=\\\"help-inline\\\">** - use Guard CanActivate </span>\\r\\n      </p>\\r\\n      <hr />\\r\\n      <div>\\r\\n        <div\\r\\n          [@routeAnimations]=\\\"prepareRoute(outlet)\\\"\\r\\n          id=\\\"wrap_outlet\\\"\\r\\n          style=\\\"position: relative\\\"\\r\\n        >\\r\\n          <router-outlet #outlet=\\\"outlet\\\"></router-outlet>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br/>    \\r\\n    </div>\\r\\n  </main>\\r\\n</div>\\r\\n\"","import { Component, OnInit, } from '@angular/core';\r\nimport { Router, ActivatedRoute, RouterOutlet } from '@angular/router';\r\nimport {\r\n  trigger,\r\n  transition,\r\n  style,\r\n  query,\r\n  group,\r\n  animate,\r\n} from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styles: [' ul > li .active{background-color: #C7C7C7; color: #fff; } ul > li{margin-top:5px}'],\r\n  animations:[\r\n    trigger('routeAnimations', [      \r\n      transition('*=>*', [\r\n        style({ position: 'relative' }),\r\n        query(':leave .wrap_component, :enter .wrap_component', [\r\n          style({\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%'\r\n          })\r\n        ], { optional: true }),\r\n        group([\r\n          query(':enter .wrap_component', [\r\n            style({ left: '-120%'}),\r\n            animate('700ms cubic-bezier(0.470, -0.125, 0.615, 1.120)',\r\n              style({\r\n                left:0\r\n              }))\r\n          ], { optional: true }),\r\n          query(':leave .wrap_component', [\r\n            style({\r\n              left:0\r\n            }),\r\n            animate('700ms cubic-bezier(0.470, -0.125, 0.615, 1.120)', style({\r\n              left:'120%'\r\n            }))\r\n          ], { optional: true })\r\n        ])        \r\n      ]),\r\n    ])\r\n  ] // end animation\r\n})\r\n\r\nexport class AppComponent implements OnInit{\r\n  \r\n  title:string = 'App Angular Components';\r\n\r\n  constructor(private router: Router, private route : ActivatedRoute){};\r\n\r\n  ngOnInit() {  }\r\n\r\n  linkFormComponent(){\r\n    this.router.navigate(['reactform'], {relativeTo: this.route})  \r\n  };\r\n\r\n  prepareRoute(outlet: RouterOutlet) {\r\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\r\n  } \r\n  \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {HttpModule} from '@angular/http';\r\nimport { AppComponent } from './app.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { DynamicPipePipe } from './dynamic-pipe/dynamic-pipe.pipe';\r\nimport { CarsPipeComponent } from './cars-pipe/cars-pipe.component';\r\n// import {LogService} from './services/log-service.service';\r\n// import {DataService} from './services/data-service.service';\r\nimport { PhoneListComponent } from './phoneList/phone-list.component';\r\nimport { FormComponent } from './form/form.component';\r\nimport { ReactiveFormComponent } from './reactive-form/reactive-form.component';\r\n// import { ColorsService } from './services/colors.service';\r\nimport { ColorsComponent } from './colors/colors.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ProductModule } from './product/product.module';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { TableComandsComponent } from './table-comands/table-comands.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { ColorsGuardService } from './services/colors-guard.service';\r\nimport { ExitReactFormGuardService } from './services/exit-react-form-guard.service';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport {  BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CarsComponent } from './input-test/cars/cars.component';\r\nimport { CarComponent } from './input-test/car/car.component';\r\nimport { FormAddItemComponent } from './input-test/form-add-item/form-add-item.component';\r\nimport { TestComponent } from './test-component/test-component';\r\nimport { TestDirective } from './test-component/test.directive';\r\nimport { PowPipe } from './cars-pipe/pow.pipe';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DynamicPipePipe,\r\n    CarsPipeComponent,\r\n    PhoneListComponent,\r\n    FormComponent,\r\n    ReactiveFormComponent,\r\n    ColorsComponent,\r\n    TableComandsComponent,\r\n    NotFoundComponent,\r\n    CarsComponent,\r\n    CarComponent,\r\n    FormAddItemComponent,\r\n    TestComponent,\r\n    TestDirective,\r\n    PowPipe\r\n  ],\r\n  imports: [  \r\n    HttpModule,\r\n    HttpClientModule,  \r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    FontAwesomeModule,\r\n    ProductModule,\r\n    SharedModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [ColorsGuardService, ExitReactFormGuardService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".bootstrap-switch-criteria {\\r\\n    width: 88px;\\r\\n    overflow: hidden;\\r\\n    margin: 0 15px 10px;\\r\\n    display: inline-block;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.bootstrap-switch-criteria .switcher {\\r\\n    position: relative;\\r\\n    height: 33px;\\r\\n}\\r\\n\\r\\n.switcher .switch-default {\\r\\n    position: absolute;\\r\\n    font-size: 12px;\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\n.switcher .switch-on {\\r\\n    left: 9px;\\r\\n    top: 5px;\\r\\n}\\r\\n\\r\\n.switcher .switch-off {\\r\\n    left: auto;\\r\\n    right: 9px;\\r\\n    top: 5px;\\r\\n}\\r\\n\\r\\n.switcher .bootstrap-switch-label {\\r\\n    left: 5px;\\r\\n    z-index: 1;\\r\\n    margin-left: 0;\\r\\n    margin-right: 0;\\r\\n    cursor: pointer;\\r\\n    transition: left .6s ease-out;\\r\\n}\\r\\n\\r\\n.switcher .push-left {\\r\\n    left: 53%;\\r\\n}\\r\\n\\r\\n.bootstrap-switch-criteria.bootstrap-switch-small .bootstrap-switch-label {\\r\\n    width: 36px;\\r\\n}\"","module.exports = \"<div class=\\\"wrap_component\\\">\\r\\n    <div class=\\\"panel widget \\\">\\r\\n        <div class=\\\"panel-heading vd_bg-blue\\\">\\r\\n            <h3 class=\\\"panel-title\\\"> <span class=\\\"menu-icon\\\">\\r\\n            <fa-icon [icon]=\\\"faPuzzlePiece\\\"></fa-icon>\\r\\n            </span> {{title}}</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body-list pd-15\\\">\\r\\n            <div class=\\\"input-group mgbt-xs-15\\\">\\r\\n                <div class=\\\"panel widget light-widget\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-xl-12\\\">\\r\\n                            <h3 style=\\\"font-weight: 600;\\\">You can add some item</h3>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <label class=\\\"control-label\\\">Name Car</label>\\r\\n                            <div class=\\\"controls\\\">\\r\\n                                <input type=\\\"text\\\" placeholder=\\\"name of car\\\" [(ngModel)]=\\\"itemName\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <label class=\\\"control-label\\\">Age Car</label>\\r\\n                            <div class=\\\"controls\\\">\\r\\n                                <input type=\\\"number\\\" placeholder=\\\"age\\\" [(ngModel)]=\\\"itemAge\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-xl-12\\\">\\r\\n                            <p class=\\\"vd_red\\\">{{errorInput}}</p>\\r\\n                            <button style=\\\"margin-top:5px;\\\" class=\\\"btn vd_btn vd_bg-green\\\" (click)=\\\"addItemCar()\\\">Add Item Car</button>\\r\\n                            <hr>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-xl-12\\\">\\r\\n                            <strong style=\\\"margin-right: 10px; vertical-align:super;\\\" class=\\\"control-label\\\">Filter the list</strong>\\r\\n                            <label style=\\\"vertical-align:super\\\" for=\\\"checkCriteria\\\">Sorted by</label>\\r\\n                            <div class=\\\"bootstrap-switch bootstrap-switch-blue bootstrap-switch-small bootstrap-switch-criteria\\\">\\r\\n                                <div class=\\\"bootstrap-switch-container switcher\\\">\\r\\n                                    <span class=\\\"switch-on switch-default\\\">name</span>\\r\\n                                    <label [ngClass]=\\\"{'push-left':pushing}\\\" class=\\\"bootstrap-switch-label switch-default\\\" for=\\\"check-name\\\">&nbsp;</label>\\r\\n                                    <span class=\\\"switch-off switch-default\\\">age</span>\\r\\n                                    <input id=\\\"check-name\\\" class=\\\"mgr-10\\\" type=\\\"checkbox\\\" data-rel=\\\"switch\\\" data-size=\\\"small\\\" data-wrapper-class=\\\"blue\\\" style=\\\"display:none\\\" (change)=\\\"logCh($event.target.checked)\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"controls col-lg-6\\\">\\r\\n                                    <input type=\\\"text\\\" placeholder=\\\"Input name or age of car\\\" [(ngModel)]=\\\"findLetter\\\">\\r\\n                                    <br>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"col-xl-12\\\">\\r\\n                            <ul style=\\\"padding-left: 0;\\\">\\r\\n                                <li class=\\\"mgbt-xs-10\\\" *ngFor=\\\"let item of listCar |dynamicPipe:findLetter:searchCriteria; let ind = index \\\">\\r\\n                                    <strong>{{ind + 1}}) {{item.name}} ---- {{item.age}}</strong>\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- -------------- -->\\r\\n    <div class=\\\"panel widget\\\">\\r\\n        <div class=\\\"panel-heading vd_bg-blue\\\">\\r\\n          <h3 class=\\\"panel-title\\\">\\r\\n            <span class=\\\"menu-icon\\\"> <fa-icon [icon]=\\\"faBars\\\"></fa-icon> </span>\\r\\n            {{ titlePipe }}\\r\\n          </h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body-list pd-15\\\">\\r\\n          <div class=\\\"input-group mgbt-xs-15\\\">\\r\\n            <div class=\\\"panel widget light-widget\\\">\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"data\\\" />\\r\\n              <strong>number of degree 3 --{{ data | appPow: 3:\\\",\\\" }}</strong>\\r\\n              <br />\\r\\n              <strong>number of degree 10-- {{ data | appPow: 10:\\\".\\\" }}</strong>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { faPuzzlePiece, faBars } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface Cars {\r\n  name: string;\r\n  age: number;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-list-pipe',\r\n  templateUrl: './cars-pipe.component.html',\r\n  styleUrls: ['./cars-pipe.component.css']\r\n})\r\n\r\nexport class CarsPipeComponent implements OnInit {\r\n  faPuzzlePiece = faPuzzlePiece;\r\n  faBars=faBars;\r\n  title = 'Impure Pipe';\r\n  newArr = [];\r\n  titlePipe: string = 'my Pipe';\r\n  data:number=0;\r\n\r\n  constructor() { }\r\n\r\n  findLetter: string = '';\r\n  itemName: string = '';\r\n  itemAge: number = 0;\r\n  errorInput: string = '';\r\n  searchCriteria: string = 'name';\r\n  rxObs: string = '';\r\n  pushing: boolean = false;\r\n  listCar: Cars[] = [\r\n    { name: 'Ford', age: 2011 },\r\n    { name: 'Audi', age: 2011 },\r\n    { name: 'BMW', age: 2002 },\r\n    { name: 'Nisan', age: 1999 },\r\n    { name: 'Mazda', age: 1993 }\r\n  ];\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addItemCar() {\r\n    if (this.itemName === '' || this.itemAge === 0) {\r\n      this.errorInput = 'Incorect name or age of the car';\r\n    } else {\r\n      this.listCar.push({ name: this.itemName, age: this.itemAge });\r\n      this.errorInput = '';\r\n    }\r\n  }\r\n  logCh(event) {\r\n    this.pushing = event;\r\n    this.searchCriteria = event ? 'age' : 'name';\r\n  }\r\n\r\n}\r\n","import {Pipe, PipeTransform} from \"@angular/core\"\r\n\r\n@Pipe({\r\n      name: 'appPow'\r\n})\r\nexport class PowPipe implements PipeTransform{\r\n      transform(value: number, powNumber:number=1, symb:string){\r\n            return Math.pow(value, powNumber) + symb\r\n      }\r\n\r\n}","module.exports = \"<div class=\\\"wrap_component\\\">\\r\\n  <div class=\\\"panel widget\\\">\\r\\n    <div class=\\\"panel-heading vd_bg-blue\\\">\\r\\n      <h3 class=\\\"panel-title\\\">\\r\\n        <span class=\\\"menu-icon\\\">\\r\\n          <fa-icon [icon]=\\\"faAdjust\\\"></fa-icon> </span\\r\\n        >Editable list with colors\\r\\n      </h3>\\r\\n    </div>\\r\\n    <div class=\\\"panel-body-list pd-15\\\">\\r\\n      <div class=\\\"panel widget light-widget\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <h3>Add new color</h3>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <!-- ------ ADD COLOR ------->\\r\\n            <form #colorForm=\\\"ngForm\\\" (ngSubmit)=\\\"addColor(colorForm)\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                  <label class=\\\"control-label\\\">Color</label>\\r\\n                  <div class=\\\"controls\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      placeholder=\\\"White\\\"\\r\\n                      name=\\\"color\\\"\\r\\n                      [(ngModel)]=\\\"formColor.color\\\"\\r\\n                      required\\r\\n                    />\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                  <label class=\\\"control-label\\\">rgba(255, 255, 255, 1)</label>\\r\\n                  <div class=\\\"controls controls_rgba\\\" style=\\\"display: flex\\\">\\r\\n                    <input\\r\\n                      type=\\\"number\\\"\\r\\n                      placeholder=\\\"255\\\"\\r\\n                      name=\\\"R\\\"\\r\\n                      [(ngModel)]=\\\"formColor.code.red\\\"\\r\\n                      #colorR=\\\"ngModel\\\"\\r\\n                      required\\r\\n                      [class.invalid_val]=\\\"1000 <= colorR.value\\\"\\r\\n                    />\\r\\n\\r\\n                    <input\\r\\n                      type=\\\"number\\\"\\r\\n                      placeholder=\\\"255\\\"\\r\\n                      name=\\\"G\\\"\\r\\n                      [(ngModel)]=\\\"formColor.code.green\\\"\\r\\n                      #colorG=\\\"ngModel\\\"\\r\\n                      required\\r\\n                      [class.invalid_val]=\\\"1000 <= colorG.value\\\"\\r\\n                    />\\r\\n\\r\\n                    <input\\r\\n                      type=\\\"number\\\"\\r\\n                      placeholder=\\\"255\\\"\\r\\n                      name=\\\"B\\\"\\r\\n                      #colorB=\\\"ngModel\\\"\\r\\n                      [(ngModel)]=\\\"formColor.code.blue\\\"\\r\\n                      required\\r\\n                      [class.invalid_val]=\\\"1000 <= colorB.value\\\"\\r\\n                    />\\r\\n\\r\\n                    <input\\r\\n                      type=\\\"number\\\"\\r\\n                      placeholder=\\\"1\\\"\\r\\n                      name=\\\"A\\\"\\r\\n                      [(ngModel)]=\\\"formColor.code.alpha\\\"\\r\\n                      required\\r\\n                    />\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                  <label class=\\\"control-label\\\">Hex</label>\\r\\n                  <div class=\\\"controls\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      placeholder=\\\"#FFF\\\"\\r\\n                      name=\\\"hex\\\"\\r\\n                      [(ngModel)]=\\\"formColor.hex\\\"\\r\\n                      required\\r\\n                    />\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <button\\r\\n                    style=\\\"margin-right: 10px\\\"\\r\\n                    type=\\\"submit\\\"\\r\\n                    class=\\\"btn vd_btn vd_bg-green vd_white\\\"\\r\\n                    [disabled]=\\\"colorForm.invalid\\\"\\r\\n                  >\\r\\n                    Submit\\r\\n                  </button>\\r\\n                  <button type=\\\"reset\\\" class=\\\"btn vd_btn vd_bg-green vd_white\\\">\\r\\n                    Reset\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n            <!-- ------- ADD COLOR end ------ -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"help_block_err\\\">\\r\\n          <p *ngIf=\\\"colorForm.invalid && colorForm.touched\\\" class=\\\"help-inline\\\">\\r\\n            All fields must be filled\\r\\n          </p>\\r\\n\\r\\n          <p\\r\\n            *ngIf=\\\"\\r\\n              1000 <= colorR.value ||\\r\\n              1000 <= colorG.value ||\\r\\n              1000 <= colorB.value\\r\\n            \\\"\\r\\n            class=\\\"help-inline\\\"\\r\\n          >\\r\\n            The number must not exceed 1000\\r\\n          </p>\\r\\n        </div>\\r\\n        <div id=\\\"color-table\\\">\\r\\n          <div\\r\\n            class=\\\"change_color_wrap\\\"\\r\\n            [style.top]=\\\"positionTop\\\"\\r\\n            *ngIf=\\\"isVisible\\\"\\r\\n          >\\r\\n            <div>\\r\\n              <p\\r\\n                *ngIf=\\\"changeForm.invalid && changeForm.touched\\\"\\r\\n                class=\\\"help-inline\\\"\\r\\n              >\\r\\n                All fields must be filled\\r\\n              </p>\\r\\n              <p\\r\\n                *ngIf=\\\"\\r\\n                  1000 <= changeR.value ||\\r\\n                  1000 <= changeG.value ||\\r\\n                  1000 <= changeB.value\\r\\n                \\\"\\r\\n                class=\\\"help-inline\\\"\\r\\n              >\\r\\n                The number must not exceed 1000\\r\\n              </p>\\r\\n            </div>\\r\\n            <!-- -------------- CHANGE FORM-------------  -->\\r\\n            <form #changeForm=\\\"ngForm\\\" class=\\\"change_color_form\\\">\\r\\n              <input\\r\\n                type=\\\"text\\\"               \\r\\n                name=\\\"chColor\\\"\\r\\n                [(ngModel)]=\\\"changeColor.color\\\"\\r\\n                placeholder=\\\"name color\\\"\\r\\n                required\\r\\n              />\\r\\n              <div class=\\\"controls controls_rgba\\\" style=\\\"display: flex\\\">\\r\\n                <input\\r\\n                  type=\\\"number\\\"\\r\\n                  name=\\\"chR\\\"\\r\\n                  [(ngModel)]=\\\"changeColor.code.red\\\"\\r\\n                  placeholder=\\\"225\\\"\\r\\n                  required\\r\\n                  #changeR=\\\"ngModel\\\"\\r\\n                  [class.invalid_val]=\\\"1000 <= changeR.value\\\"\\r\\n                />\\r\\n\\r\\n                <input\\r\\n                  type=\\\"number\\\"\\r\\n                  name=\\\"chG\\\"\\r\\n                  [(ngModel)]=\\\"changeColor.code.green\\\"\\r\\n                  placeholder=\\\"225\\\"\\r\\n                  required\\r\\n                  #changeG=\\\"ngModel\\\"\\r\\n                  [class.invalid_val]=\\\"1000 <= changeG.value\\\"\\r\\n                />\\r\\n\\r\\n                <input\\r\\n                  type=\\\"number\\\"\\r\\n                  name=\\\"chB\\\"\\r\\n                  [(ngModel)]=\\\"changeColor.code.blue\\\"\\r\\n                  placeholder=\\\"225\\\"\\r\\n                  required\\r\\n                  #changeB=\\\"ngModel\\\"\\r\\n                  [class.invalid_val]=\\\"1000 <= changeB.value\\\"\\r\\n                />\\r\\n\\r\\n                <input\\r\\n                  type=\\\"number \\\"\\r\\n                  name=\\\"chA \\\"\\r\\n                  [(ngModel)]=\\\"changeColor.code.alpha\\\"\\r\\n                  placeholder=\\\"225 \\\"\\r\\n                  required\\r\\n                />\\r\\n              </div>\\r\\n              <input\\r\\n                type=\\\"text \\\"\\r\\n                style=\\\"max-width: 150px\\\"\\r\\n                name=\\\"chHex \\\"\\r\\n                [(ngModel)]=\\\"changeColor.hex\\\"\\r\\n                placeholder=\\\"HEX #fff \\\"\\r\\n                required\\r\\n              />\\r\\n              <div class=\\\" \\\">\\r\\n                <button\\r\\n                  class=\\\"btn vd_btn vd_bg-green btn_change_form\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                  (click)=\\\"changeDataColor()\\\"\\r\\n                  [disabled]=\\\"changeForm.invalid\\\"\\r\\n                >\\r\\n                  Change\\r\\n                </button>\\r\\n                <a\\r\\n                  class=\\\"btn menu-icon vd_bg-grey close_change_form\\\"\\r\\n                  (click)=\\\"isVisible = false\\\"\\r\\n                >\\r\\n                  <i class=\\\"fa fa-times\\\"></i>\\r\\n                </a>\\r\\n              </div>\\r\\n            </form>\\r\\n            <!-- -------- CHANGE FORM  end --------------- -->\\r\\n          </div>\\r\\n          <div class=\\\"background_layer\\\" *ngIf=\\\"isVisible\\\"></div>\\r\\n          <table class=\\\"table table-striped table_colors\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Color</th>\\r\\n                <th>RGBA</th>\\r\\n                <th>HEX</th>\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr\\r\\n                class=\\\"odd gradeX\\\"\\r\\n                *ngFor=\\\"let color of dataColors;\\\" >\\r\\n                <td>{{ color.color }}</td>\\r\\n                <td>{{ color.code.red }}, {{ color.code.green}}, {{ color.code.blue }},\\r\\n                    {{ color.code.alpha }}</td>\\r\\n                <td>{{ color.hex }}</td>\\r\\n                <td class=\\\"menu-action rounded-btn\\\">\\r\\n                  <a\\r\\n                    class=\\\"color_wiev menu-icon\\\"\\r\\n                    [ngStyle]=\\\"{ 'background-color': color.hex }\\\"\\r\\n                  >\\r\\n                  </a>\\r\\n                  <a\\r\\n                    class=\\\"btn menu-icon vd_bd-yellow vd_yellow\\\"\\r\\n                    (click)=\\\"openChangeForm(color, $event)\\\"\\r\\n                  >\\r\\n                    <i class=\\\"fa fa-pencil\\\"></i>\\r\\n                  </a>\\r\\n                  <a\\r\\n                    class=\\\"btn menu-icon vd_bd-red vd_red\\\"\\r\\n                    (click)=\\\"removeColor(color._id)\\\"\\r\\n                  >\\r\\n                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <hr />\\r\\n        <h2>\\r\\n          You can get some colors here\\r\\n          <a\\r\\n            style=\\\"text-decoration: underline\\\"\\r\\n            href=\\\"https://htmlcolorcodes.com/color-chart/flat-design-color-chart/\\\"\\r\\n            >Color list\\r\\n          </a>\\r\\n        </h2>\\r\\n        <span class=\\\"badge badge-danger badge_error\\\"> {{ requestError }} </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ColorsService } from '../services/colors.service';\r\nimport {  NgForm } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { faAdjust } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport interface Colors {\r\n  color: string;\r\n  hex: string;\r\n  _id;\r\n  code: {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    alpha: number\r\n  };\r\n};\r\n\r\nclass TemplateObj implements Colors {\r\n  color: string;\r\n  hex: string;\r\n  _id;\r\n  code: {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    alpha: number\r\n  };\r\n  constructor(color, red, green, blue, alpha, hex) {\r\n    color;\r\n    hex;\r\n    this.code = {\r\n      red, green, blue, alpha\r\n    };\r\n  };\r\n};\r\n\r\n\r\n@Component({\r\n  selector: 'app-colors',\r\n  templateUrl: './colors.component.html'\r\n\r\n})\r\nexport class ColorsComponent implements OnInit {\r\n\r\n  @ViewChild('changeForm') changeForm: NgForm;\r\n\r\n  faAdjust = faAdjust;\r\n  title: Observable<Object>;\r\n  dataColors: [Colors];\r\n  requestError: any;\r\n  formColor: Colors;\r\n  changeColor: Colors;\r\n  isVisible = false;\r\n  idElement: number;\r\n  positionTop: string;\r\n  nameColor: any;\r\n\r\n  constructor(private colorsServ: ColorsService) { }\r\n\r\n  ngOnInit() {\r\n    this.getColors();\r\n    this.formColor = new TemplateObj('', '', null, null, null, null);\r\n    this.changeColor = new TemplateObj('', '', null, null, null, null);\r\n  };\r\n\r\n  getColors() {\r\n    this.colorsServ.getItems().subscribe(\r\n      response => {\r\n        this.dataColors = response\r\n      },\r\n      error => {\r\n        this.requestError = 'ERROR: ' + error.message;\r\n      });\r\n  };\r\n  addColor(form) {\r\n    this.colorsServ.addItem(this.formColor).subscribe(response => this.dataColors.push(response));\r\n    form.reset();\r\n    this.getColors();\r\n  };\r\n\r\n  removeColor(data) {\r\n    this.colorsServ.deleteItem(data).subscribe(response => {\r\n      this.getColors();\r\n      return response;\r\n    });\r\n  };\r\n\r\n  openChangeForm(color, ev) {\r\n    this.isVisible = true;\r\n    var obj = ev.target.closest('.gradeX');\r\n    var posX = obj.offsetTop;\r\n    this.positionTop = (posX + obj.offsetHeight) + 'px';\r\n    this.changeColor =JSON.parse(JSON.stringify(color));; \r\n\r\n  };\r\n  changeDataColor() {\r\n    this.colorsServ.changeItem(this.changeColor).subscribe(response => {\r\n      this.getColors();\r\n      this.isVisible = false;\r\n      return response;\r\n    })\r\n  };\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'dynamicPipe',\r\n  pure: false\r\n})\r\nexport class DynamicPipePipe implements PipeTransform {\r\n\r\n  transform(arrCar, letters:string, name:string) {\r\n    \r\n    return  arrCar.filter(item=>item[name].toString().toLowerCase().indexOf(letters.toLowerCase()) !== -1);\r\n      \r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"wrap_component\\\">\\r\\n    <div class=\\\"panel widget\\\">\\r\\n        <div class=\\\"panel-heading vd_bg-blue\\\">\\r\\n            <h3 class=\\\"panel-title\\\"> <span class=\\\"menu-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span> {{title}}</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body-list\\\">\\r\\n            <div class=\\\"form-group col-md\\\">\\r\\n                <br>\\r\\n                <h2 class=\\\"mgbt-xs-10\\\">Form Type 1</h2>\\r\\n                <h4 style=\\\"text-align: center;\\\">User Data Json</h4>\\r\\n                <div style=\\\"padding: 5px;\\\">{{user | json}}</div>\\r\\n            </div>\\r\\n            <form class=\\\"form-horizontal\\\" (ngSubmit)='submitForm(formUser)' #formUser=\\\"ngForm\\\">\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"col-sm-4 control-label\\\">NAME</label>\\r\\n                    <div class=\\\"col-sm-7 controls\\\">\\r\\n                        <input [(ngModel)]=\\\"user.name\\\" type=\\\"text\\\" placeholder=\\\"name\\\" name=\\\"name\\\" required #userName=\\\"ngModel\\\">\\r\\n                        <span *ngIf=\\\"userName.invalid && userName.touched\\\" class=\\\"help-inline\\\">Incorect data</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"col-sm-4 control-label\\\">PASSWORD</label>\\r\\n                    <div class=\\\"col-sm-7 controls\\\">\\r\\n                        <input [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\" placeholder=\\\"password\\\" name=\\\"password\\\" required #userPass=\\\"ngModel\\\">\\r\\n                        <span *ngIf=\\\"userPass.invalid && userPass.touched\\\" class=\\\"help-inline\\\">Incorect data</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"col-sm-4 control-label\\\">Email</label>\\r\\n                    <div class=\\\"col-sm-7 controls\\\">\\r\\n                        <input [(ngModel)]=\\\"user.email\\\" type=\\\"email\\\" placeholder=\\\"email\\\" name=\\\"email\\\" required email #userEmail=\\\"ngModel\\\">\\r\\n                        <span *ngIf=\\\"userEmail.invalid && userEmail.touched\\\" class=\\\"help-inline\\\">Incorect data</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\" style=\\\"padding-left: 0\\\" ngModelGroup=\\\"formGroup1\\\">\\r\\n                    <div class=\\\"col-sm-7 controls\\\">\\r\\n                        <select [(ngModel)]=\\\"user.choice\\\" class=\\\"\\\" name=\\\"choice\\\" required #userSelect=\\\"ngModel\\\">\\r\\n                    <option>Choice 1</option>\\r\\n                    <option>Choice 2</option>\\r\\n                    <option>Choice 3</option>\\r\\n                    <option>Choice 4</option>\\r\\n                    <option>Choice 5</option>\\r\\n                </select>\\r\\n                        <p>Set Choice 5 for select element</p>\\r\\n                        <button class=\\\"btn vd_btn vd_bg-green vd_white\\\" type=\\\"button\\\" (click)=\\\"setVal()\\\"><i class=\\\"icon-ok\\\" ></i> Choice 5</button>\\r\\n                        <span *ngIf=\\\"userSelect.invalid && userSelect.touched\\\" class=\\\"help-inline\\\">Incorect data</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-12 controls\\\">\\r\\n                        <div class=\\\"vd_radio radio-success\\\">\\r\\n                            <input [(ngModel)]=\\\"user.optionsRadios2\\\" type=\\\"radio\\\" name=\\\"optionsRadios2\\\" id=\\\"optionsRadios3\\\" value=\\\"option3\\\" required>\\r\\n                            <label for=\\\"optionsRadios3\\\"> 3 </label>\\r\\n                            <input [(ngModel)]=\\\"user.optionsRadios2\\\" type=\\\"radio\\\" name=\\\"optionsRadios2\\\" id=\\\"optionsRadios4\\\" value=\\\"option4\\\" required>\\r\\n                            <label for=\\\"optionsRadios4\\\"> 4 </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <button [disabled]=\\\"formUser.invalid\\\" class=\\\"btn vd_btn vd_bg-green vd_white\\\" type=\\\"submit\\\"><i class=\\\"icon-ok\\\" ></i> Submit</button>\\r\\n                        <!---->\\r\\n                        <br>\\r\\n                        <pre *ngIf=\\\"isSubmited\\\">{{formUserData | json}}</pre>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit,  ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nexport class User{\r\n  constructor(public name: string, \r\n              public password: string, \r\n              public choice: string,\r\n              public email: string,\r\n              public optionsRadios2:string)\r\n  { }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html'\r\n})\r\nexport class FormComponent implements OnInit {\r\n\r\n  @ViewChild('formUser') formUser : NgForm;\r\n\r\n  constructor() { }\r\n  choice:{ id: number, name: string, disabled?: boolean}[] = [\r\n    {id:1, name:'Choice 1', disabled:true},\r\n    {id:1, name:'Choice 2', disabled:true}];\r\n  title:string='Template Driven';\r\n  defaultChoice=this.choice[0].name; \r\n  user:User;\r\n  formUserData={};\r\n  isSubmited=false;\r\n\r\n  ngOnInit() {\r\n    this.user={\r\n      name: '',\r\n      password: '',\r\n      email:'',\r\n      choice: 'Choice 1',\r\n      optionsRadios2:'option3'}\r\n  };\r\n  submitForm(x:NgForm){\r\n    this.formUserData =this.formUser.value;\r\n    this.isSubmited = true;\r\n    this.formUser.reset();\r\n  };    \r\n  setVal(){\r\n    this.formUser.form.patchValue({\r\n    formGroup1:{ choice: 'Choice 5'}\r\n    })\r\n  }\r\n}\r\n","module.exports = \"<p>\\r\\n    <span>MODEL </span>:<strong> {{car.model}}</strong>\\r\\n    - <span>AGE</span>: <strong>{{car.age}}</strong>\\r\\n</p>\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-car',\r\n  templateUrl: './car.component.html',\r\n})\r\nexport class CarComponent implements OnInit {\r\n  @Input('carItem') car:any\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  \r\n\r\n}\r\n","module.exports = \"<div class=\\\"wrap_component\\\">\\r\\n  <div class=\\\"wrap_input\\\" #wrap style=\\\"overflow: hidden\\\">\\r\\n    <div class=\\\"panel widget\\\">\\r\\n      <div class=\\\"panel-heading vd_bg-blue\\\">\\r\\n        <h3 class=\\\"panel-title\\\">\\r\\n          <span class=\\\"menu-icon\\\">\\r\\n            <fa-icon [icon]=\\\"faArrowsAltH\\\"></fa-icon>\\r\\n          </span>\\r\\n          {{ title }}\\r\\n        </h3>\\r\\n      </div>\\r\\n      <div class=\\\"panel-body-list\\\" style=\\\"padding-bottom: 40px\\\">\\r\\n        <app-form-add-item (onAddCar)=\\\"updateCarsList($event)\\\">\\r\\n        </app-form-add-item>\\r\\n        <hr />\\r\\n        <div class=\\\"col-sm-10\\\">\\r\\n          <h1>app cars</h1>\\r\\n          <app-car *ngFor=\\\"let car of cars\\\" [carItem]=\\\"car\\\"></app-car>\\r\\n        </div>\\r\\n        <br>\\r\\n        <hr>\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <div>\\r\\n            <h2>In this component I used the @Input() and @Output() directives.</h2>\\r\\n          </div>\\r\\n          <a rel=\\\"nofollow\\\" target=\\\"_blank\\\" href=\\\"../../../assets/img/Output-Input schema.png\\\"><img class=\\\"zoom\\\" src=\\\"../../../assets/img/Output-Input schema.png\\\" alt=\\\"\\\"></a>\\r\\n        </div>        \\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { trigger, state, style, animate, transition, group } from '@angular/animations';\r\nimport {faArrowsAltH} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n@Component({\r\n  selector: 'app-cars',\r\n  templateUrl: './cars.component.html',\r\n  styles:[`:host(app-form-add-item) { display:block; background:red;}`],\r\n})\r\nexport class CarsComponent implements OnInit { \r\n  title:string='Input-Output';\r\n  faArrowsAltH=faArrowsAltH;\r\n  animationRun:string='end';\r\n  enterLeave:string='selected';\r\n  isVisible:boolean=true;\r\n  clientHeight:any;\r\n\r\n  constructor() {}\r\n\r\n  cars:{model:string, age:number}[]=[\r\n    {model:'BMW', age:2011},\r\n    {model:'Reno', age:2000}\r\n  ]\r\n\r\n  ngOnInit() { }\r\n\r\n  updateCarsList(car:{model:string, age:number}){\r\n    this.cars.push(car);\r\n  };\r\n  \r\n}\r\n","module.exports = \"    <div class=\\\"col-sm-7\\\">\\r\\n       <div class=\\\"form-cars\\\">\\r\\n          <br>\\r\\n         <p>Add a new car to the list</p>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"model\\\" placeholder=\\\"model car\\\">\\r\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"age\\\" placeholder=\\\"age car\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn vd_bg-green vd_white\\\" (click)=\\\"addCar()\\\">Add car</button>\\r\\n       </div>\\r\\n    </div>\\r\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-form-add-item',\r\n  templateUrl: './form-add-item.component.html'\r\n\r\n})\r\nexport class FormAddItemComponent implements OnInit {\r\n  @Output('onAddCar') carEmitter: EventEmitter<{model:string, age:number}> =  new EventEmitter();\r\n  model:string;\r\n  age:number;\r\n\r\n  constructor() { }\r\n  \r\n  ngOnInit() {\r\n  }\r\n  addCar(){\r\n    this.carEmitter.emit({\r\n      model:this.model,\r\n      age:this.age\r\n    });\r\n    this.model=\"\";\r\n    this.age=null;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"wrap_component\\\">\\r\\n  <div>\\r\\n    <img src=\\\"/assets/img/error-404.png\\\" alt=\\\"\\\" />\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html'\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"wrap_component\\\">\\r\\n    <div class=\\\"panel widget \\\">\\r\\n        <div class=\\\"panel-heading vd_bg-blue\\\">\\r\\n            <h3 class=\\\"panel-title\\\"> <span class=\\\"menu-icon\\\">\\r\\n            <fa-icon [icon]=\\\"faBoxOpen\\\"></fa-icon>\\r\\n            </span> {{title}}</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body-list pd-15\\\">\\r\\n            <div class=\\\"input-group mgbt-xs-15\\\">\\r\\n                <div class=\\\"panel widget light-widget\\\">\\r\\n                    <div class=\\\"wrap_alert_hidden\\\">\\r\\n                        <div class=\\\"alert alert-success vd_hidden hint_success\\\" #hint_success>\\r\\n                            <span class=\\\"vd_alert-icon\\\"><i class=\\\"fa fa-check-circle vd_green\\\"></i></span><strong class=\\\"message_text\\\"></strong>\\r\\n                        </div>\\r\\n                        <div class=\\\"alert alert-danger vd_hidden hint_error\\\" #hint_error> <span class=\\\"vd_alert-icon \\\"><i class=\\\"fa fa-exclamation-circle vd_red \\\"></i></span><strong class=\\\"message_text\\\"></strong>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <p>In this module used services data-service and log-service</p>\\r\\n                    <h3 style=\\\"font-weight: 600; \\\">Add phone</h3>\\r\\n                    <div class=\\\"controls\\\">\\r\\n                        <input type=\\\"text\\\" placeholder=\\\"name\\\" [(ngModel)]=\\\"namePhone\\\" name=\\\"namePhone \\\" style=\\\"margin-bottom: 5px;\\\">\\r\\n\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"modelPhone \\\" name=\\\"modelPhone \\\" style=\\\"margin-bottom: 5px; \\\" placeholder=\\\"model\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <button class=\\\"btn vd_btn vd_bg-green \\\" (click)=\\\"addPhone([hint_success, hint_error]) \\\">Add Phone</button>\\r\\n                    <ul style=\\\"padding-left: 0; margin-top: 10px; \\\">\\r\\n                        <li *ngFor=\\\"let phone of phoneList; let ind=index \\\"><strong>{{ind+1}}) {{phone.name}} --- {{phone.model}}</strong> </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n            <p>Getting, adding a list item and displaying, hiding hints is done using the services</p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../services/data-service.service';\r\nimport { LogService } from '../services/log-service.service';\r\nimport { faBoxOpen } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n@Component({\r\n  selector: 'app-phone-list',\r\n  templateUrl: './phone-list.component.html'\r\n})\r\n\r\nexport class PhoneListComponent implements OnInit {\r\n  title: string = 'Services';\r\n  faBoxOpen = faBoxOpen;\r\n  phoneList;\r\n  namePhone: string;\r\n  modelPhone: string;\r\n  successText: string = 'Well done!';\r\n  errorText: string = 'Incorrect data!';\r\n\r\n  constructor(private dataservice: DataService, private logService: LogService) { }\r\n\r\n  ngOnInit() {\r\n    this.phoneList = this.dataservice.getList()\r\n  }\r\n\r\n  addPhone(element: [HTMLElement, HTMLElement]) {\r\n    if (this.namePhone !== '' && this.namePhone !== undefined && this.modelPhone !== '' && this.modelPhone !== undefined) {\r\n      this.dataservice.addItemPhone({ name: this.namePhone, model: this.modelPhone });\r\n      this.logService.showHint(element[0], this.successText);\r\n    } else {\r\n      this.logService.showHint(element[1], this.errorText);\r\n    }\r\n    this.namePhone = '';\r\n    this.modelPhone = '';\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-6\\\">\\r\\n      <div class='wrap-img_product'>\\r\\n          <img src=\\\"./assets/img/{{image}}\\\" alt=\\\"\\\">\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <h3><strong>ID:</strong>{{ id }}</h3>\\r\\n    <h3><strong>Title:</strong> {{ title }}</h3>\\r\\n    <h3><strong>Available:</strong> {{ available }}</h3>\\r\\n    <h3><strong>Country:</strong> {{ country }}</h3>\\r\\n    <h3><strong>Img:</strong> {{ image }}</h3>\\r\\n\\r\\n    <h5 headColor>Hash : {{ hash }}</h5>\\r\\n    <hr />\\r\\n    <p><strong>Popular products</strong></p>\\r\\n    <a\\r\\n      [routerLink]=\\\"['/products', 2, 'B&O TV']\\\"\\r\\n      [queryParams]=\\\"{ available: 'no', country: 'France', image: '5.jpg' }\\\"\\r\\n      [fragment]=\\\"'anchor6'\\\"\\r\\n      >B&O TV--2</a\\r\\n    >\\r\\n    <br />\\r\\n    <button type=\\\"button\\\" (click)=\\\"openToshiba()\\\">Go to Toshiba</button>\\r\\n  </div>\\r\\n</div>\\r\\n<hr />\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styles: [`\r\n  .wrap-img_product{height:290px}\r\n  img{max-height: 100%; max-width: 100%}`]\r\n})\r\nexport class ProductComponent implements OnInit {\r\n  id: number;\r\n  title: string;\r\n  available: string;\r\n  country: string;\r\n  image: string;\r\n  hash: any;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router) {\r\n\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.title = this.route.snapshot.params['title'];\r\n    this.available = this.route.snapshot.queryParams['available'];\r\n    this.country = this.route.snapshot.queryParams['country'];\r\n    this.image = this.route.snapshot.queryParams['image'];\r\n    this.hash = this.route.snapshot.fragment;\r\n\r\n    //////////////// Dynamic change of parameters /////////////////////\r\n\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.id = params['id'];\r\n      this.title = params['title'];\r\n    });\r\n\r\n    this.route.queryParams.subscribe((params: Params) => {\r\n      this.available = params['available'];\r\n      this.country = params['country'];\r\n      this.image = params['image'];\r\n\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  };\r\n\r\n  openToshiba() {\r\n    this.router.navigate(['/products', 4, 'Toshiba TV'],\r\n      {\r\n        queryParams: {\r\n          available: 'yes',\r\n          country: 'USA',\r\n          image: '6.jpg'\r\n        },\r\n        fragment: 'anchor7'\r\n      }\r\n    )\r\n  }\r\n  \r\n}\r\n\r\n","module.exports = \"<div class=\\\"wrap_component\\\">\\r\\n  <div class=\\\"panel widget\\\">\\r\\n    <div class=\\\"panel-heading vd_bg-blue\\\">\\r\\n      <!-- <button (click)='postItem()'>GET</button> -->\\r\\n\\r\\n      <!-- <button (click)='postItem()'>ttttt</button> -->\\r\\n      <h3 class=\\\"panel-title\\\">\\r\\n        <span class=\\\"menu-icon\\\"> <fa-icon [icon]=\\\"faCarrot\\\"></fa-icon> </span\\r\\n        >{{ title }}\\r\\n      </h3>\\r\\n    </div>\\r\\n    <div class=\\\"panel-body-list pd-15\\\">\\r\\n      <div class=\\\"input-group mgbt-xs-15\\\">\\r\\n        <div class=\\\"panel widget light-widget\\\">\\r\\n          <div class=\\\"panel-body\\\" style=\\\"padding-bottom: 0; padding-top: 0\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n            <h2>Other products:</h2>\\r\\n            <ul class=\\\"nav_products\\\" style=\\\"padding-inline-start: 0\\\">\\r\\n              <li *ngFor=\\\"let product of products\\\">\\r\\n                <!-- [routerLink]=\\\"[{ outlets: { childOut: ['/products', product._id, product.title] } }]\\\" -->\\r\\n\\r\\n                <a\\r\\n                [routerLink]=\\\"['/products', product._id, product.title]\\\"\\r\\n                  [queryParams]=\\\"{\\r\\n                    available: product.available,\\r\\n                    country: product.country,\\r\\n                    image: product.image\\r\\n                  }\\\"\\r\\n                  routerLinkActive=\\\"active\\\"\\r\\n                  [fragment]=\\\"product.fragment\\\"\\r\\n                >\\r\\n                  <span>Title: </span>\\r\\n                  <strong>{{ product.title }} </strong>\\r\\n                  <span>ID: </span>\\r\\n                  <strong>{{ product._id }}</strong>\\r\\n                </a>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <p></p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProductsService } from '../../services/products.service';\r\nimport { faCarrot } from '@fortawesome/free-solid-svg-icons';\r\nimport {  Router } from '@angular/router';\r\n\r\nexport interface Product {\r\n  country:string,\r\n    available:string,    \r\n    description:string,\r\n    image:string,\r\n    title:string,\r\n    id:number\r\n};\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styles: [`\r\n  .nav_products >li > a.active{background-color: #C7C7C7;}\r\n  a{text-decoration: underline;}\r\n  .panel .widget{width:100%}`]\r\n})\r\nexport class ProductList implements OnInit {\r\n  title: string = 'Products';\r\n  products:Product;\r\n  faCarrot = faCarrot;  \r\n  constructor(private productServ: ProductsService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getItem();\r\n    this.router.navigate(['/products', 4, 'Toshiba TV'], {\r\n      queryParams: {\r\n        available: 'yes',\r\n        country: 'USA',\r\n        image: '6.jpg'\r\n      },\r\n      fragment: 'anchor7'\r\n    })\r\n\r\n  };\r\n\r\n  getItem() {\r\n    this.productServ.getItem().subscribe(response => {\r\n      this.products = response;\r\n    })\r\n  } \r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProductList } from './product-list/product-list.component';\r\nimport { ProductComponent } from './product-description/product.component';\r\n\r\nconst productsRoutes: Routes = [\r\n      {\r\n            path: 'products',\r\n            component: ProductList,\r\n            children: [{ path: ':id/:title', component: ProductComponent }],\r\n      }\r\n];\r\n@NgModule({\r\n      imports: [RouterModule.forChild(productsRoutes)],\r\n      exports: [RouterModule]\r\n})\r\nexport class ProductRoutingModul { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductComponent } from './product-description/product.component';\r\nimport { ProductList } from './product-list/product-list.component';\r\nimport { ProductRoutingModul } from './product-routing.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ProductRoutingModul,\r\n    SharedModule,\r\n    FontAwesomeModule\r\n  ], \r\n  declarations: [ProductComponent, ProductList]\r\n   \r\n})\r\nexport class ProductModule { }\r\n","module.exports = \"<div class=\\\"wrap_component\\\">\\r\\n    <div class=\\\"panel widget\\\">\\r\\n        <div class=\\\"panel-heading vd_bg-blue\\\">\\r\\n            <h3 class=\\\"panel-title\\\"> <span class=\\\"menu-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span> {{title}}</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body-list\\\">\\r\\n            <div class=\\\"form-group col-md\\\">\\r\\n                <br>\\r\\n                <h2 class=\\\"mgbt-xs-10\\\">Form Type 2</h2>\\r\\n                <button type=\\\"button\\\" class=\\\"btn vd_btn vd_bg-yellow\\\" (click)=\\\"notAsk('user')\\\">Not ask about exit</button>\\r\\n                <h4 _ngcontent-c7=\\\"\\\" style=\\\"text-align: center;\\\">User Data Json</h4>\\r\\n                <p>{{reactiveForm.value | json}}</p>\\r\\n            </div>\\r\\n\\r\\n            <!-- ------------------ FORM -------------------------- -->\\r\\n            <form class=\\\"form-horizontal\\\" [formGroup]=\\\"reactiveForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                <!-- ------------------ NAME -------------------------- -->\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <div class=\\\"label-wrapper\\\">\\r\\n                            <label class=\\\"control-label\\\">First Name</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"vd_input-wrapper\\\" id=\\\"first-name-input-wrapper\\\"> <span class=\\\"menu-icon\\\"> <i class=\\\"fa fa-user\\\"></i> </span>\\r\\n                            <input [ngClass]=\\\"{'vd_bd-red': reactiveForm.get('firstname').invalid && reactiveForm.get('firstname').touched}\\\" formControlName=\\\"firstname\\\" type=\\\"text\\\" placeholder=\\\"John\\\" class=\\\"required\\\" required=\\\"\\\" name=\\\"firstname\\\" id=\\\"firstname\\\">\\r\\n                        </div>\\r\\n                        <p class=\\\"vd_soft-grey\\\">These names already exist: user, user123, userstaff</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"reactiveForm.get('firstname').invalid && reactiveForm.get('firstname').touched\\\" id=\\\"vd_login-error\\\" class=\\\"alert alert-danger \\\"><i class=\\\"fa fa-exclamation-circle fa-fw\\\"></i> Incorect data</div>\\r\\n                <!-- ------------------ EMAIL -------------------------- -->\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <div class=\\\"label-wrapper\\\">\\r\\n                            <label class=\\\"control-label\\\">Email </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"vd_input-wrapper\\\" id=\\\"email-input-wrapper\\\"> <span class=\\\"menu-icon\\\"> <i class=\\\"fa fa-envelope\\\"></i> </span>\\r\\n                            <input [ngClass]=\\\"{'vd_bd-red': reactiveForm.get('email').invalid && reactiveForm.get('email').touched}\\\" formControlName=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Email\\\" class=\\\"required\\\" required=\\\"\\\" name=\\\"email\\\" id=\\\"email\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"reactiveForm.get('email').invalid && reactiveForm.get('email').touched\\\" id=\\\"vd_login-error\\\" class=\\\"alert alert-danger \\\"><i class=\\\"fa fa-exclamation-circle fa-fw\\\"></i> Incorect data</div>\\r\\n                <!-- ------------------ PHONE NUMBER -------------------------- -->\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <div class=\\\"label-wrapper\\\">\\r\\n                            <label class=\\\"control-label\\\">Phone </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"vd_input-wrapper\\\"> <span class=\\\"menu-icon\\\"> <i class=\\\"fa fa-envelope\\\"></i> </span>\\r\\n                            <input formControlName=\\\"numberPhone\\\" [ngClass]=\\\"{'vd_bd-red': reactiveForm.get('numberPhone').invalid && reactiveForm.get('numberPhone').touched}\\\" type=\\\"text\\\" placeholder=\\\"Number Phone\\\" class=\\\"required\\\" required=\\\"\\\" name=\\\"numberPhone\\\">\\r\\n\\r\\n                        </div>\\r\\n                        <span class=\\\"vd_soft-grey\\\">+38(044)777-77-77</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"reactiveForm.get('numberPhone').invalid && reactiveForm.get('numberPhone').touched\\\" id=\\\"vd_login-error\\\" id=\\\"vd_login-error\\\" class=\\\"alert alert-danger \\\"><i class=\\\"fa fa-exclamation-circle fa-fw\\\"></i> Incorect number phone</div>\\r\\n                <!-- ------------------ PASSWORD form-group-------------------------- -->\\r\\n                <div class=\\\"form-group\\\" formGroupName=\\\"inconsequential\\\">\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <div class=\\\"label-wrapper\\\">\\r\\n                            <label class=\\\"control-label\\\">Password </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"vd_input-wrapper\\\" id=\\\"password-input-wrapper\\\"> <span class=\\\"menu-icon\\\"> <i class=\\\"fa fa-lock\\\"></i> </span>\\r\\n                            <input [ngClass]=\\\"{'vd_bd-red': reactiveForm.get('inconsequential.password').invalid && reactiveForm.get('inconsequential.password').touched}\\\" formControlName=\\\"email\\\" formControlName=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"required\\\" required=\\\"\\\"\\r\\n                                name=\\\"password\\\" id=\\\"password\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"reactiveForm.get('inconsequential.password').invalid && reactiveForm.get('inconsequential.password').touched\\\" id=\\\"vd_login-error\\\" class=\\\"alert alert-danger \\\"><i class=\\\"fa fa-exclamation-circle fa-fw\\\"></i>\\r\\n                        <span *ngIf=\\\"reactiveForm.get('inconsequential.password').errors['required']\\\">This field must not be empty.</span>\\r\\n                        <span *ngIf=\\\"reactiveForm.get('inconsequential.password').errors['lengthError']\\\">Password must be more than {{charsCount}} characters.</span>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <!-- ------------------ CHECKBOX -------------------------- -->\\r\\n                    <div class=\\\"col-md-12 mgbt-xs-10 mgtp-10\\\">\\r\\n                        <div class=\\\"vd_checkbox\\\">\\r\\n                            <input formControlName=\\\"checkbox\\\" type=\\\"checkbox\\\" id=\\\"checkbox-2\\\" name=\\\"checkbox\\\" required>\\r\\n                            <label for=\\\"checkbox-2\\\"> I agree with <a href=\\\"#\\\">terms of service</a></label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- ------------------ SUBMIT -------------------------- -->\\r\\n\\r\\n                    <div class=\\\"col-md-12 mgbt-xs-5\\\">\\r\\n                        <button [disabled]=\\\"reactiveForm.invalid\\\" class=\\\"btn vd_bg-green vd_white\\\" type=\\\"submit\\\" id=\\\"submit-register\\\" name=\\\"submit-register\\\">Register</button>\\r\\n\\r\\n                        <!--  -->\\r\\n                    </div>\\r\\n                    <br>\\r\\n                    <pre *ngIf=\\\"isSubmited\\\">{{preForm | json}}</pre>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { ComponentCanDeactivate } from '../services/exit-react-form-guard.service';\r\nimport { ColorsService } from '../services/colors.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-reactive-form',\r\n  templateUrl: './reactive-form.component.html',\r\n  styles: ['.vd_bd-red{box-shadow: 0px 0px 3px 1px red;}']\r\n})\r\nexport class ReactiveFormComponent implements OnInit, ComponentCanDeactivate  {\r\n\r\n  title:string=\"Reactive Form\";\r\n  reactiveForm : FormGroup;\r\n  preForm ={};\r\n  isSubmited: boolean = false;\r\n  charsCount: number=5;\r\n  logIn: boolean=false;\r\n  private url :string= \"http://localhost:3000/users/\";\r\n  usersName:{key:string}[]=[];\r\n\r\n  constructor(private reqUersService:ColorsService) { }\r\n\r\n  ngOnInit() {\r\n    this.reactiveForm = new FormGroup({\r\n      firstname: new FormControl('', {\r\n        validators:[Validators.required],\r\n        asyncValidators:[this.nameVerification.bind(this)]}),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      numberPhone: new FormControl(null, [Validators.required, this.validatorNumber.bind(this)]),      \r\n      inconsequential: new FormGroup({\r\n        password: new FormControl('', [Validators.required, this.validatorPassword.bind(this)]),\r\n        checkbox: new FormControl(false)\r\n      })      \r\n    })\r\n  };\r\n  // ---------------------\r\n  onSubmit(){\r\n    this.isSubmited=true;\r\n    this.preForm = this.reactiveForm.value;\r\n    this.reactiveForm.reset();\r\n  }\r\n  // --------------- Password Validator -----------\r\n\r\n  validatorPassword(control: FormControl) {\r\n    if(control.value){\r\n      if(control.value.length < this.charsCount ){\r\n        return{\r\n          'lengthError' : true\r\n        };\r\n      }\r\n    }    \r\n    return null\r\n  };\r\n  // --------------- phone number Validator -----------\r\n  validatorNumber(control: FormControl){  \r\n    var patternNumber = /^\\+\\d{2}\\(\\d{3}\\)\\d{3}-\\d{2}-\\d{2}$/;\r\n    if (typeof control.value !== 'number' &&  patternNumber.test(control.value)){\r\n      return null\r\n    } \r\n    return {\r\n      'phoneError':true\r\n    }\r\n  };\r\n  // --------------- Async user name Validator -----------\r\n  nameVerification(control:FormControl): Observable<{ [key: string]: any } | null>{        \r\n    return this.reqUersService.newGetItems(this.url)\r\n    .pipe(map(response=> {\r\n      // console.log(control.value);\r\n      for(var user in response){\r\n        if(response[user]['name'] === control.value.replace(/\\s/g, '')) { \r\n          return {'errorNameValid': true};\r\n        }\r\n      }      \r\n        return null;          \r\n      }\r\n    ))\r\n  };\r\n  \r\n  notAsk(){\r\n    this.logIn=true;\r\n  }\r\n\r\n  // --------- Guard canDeactivate -------- \r\n  canDeactivate() : boolean | Observable<boolean>{     \r\n    if(!this.logIn){\r\n      return confirm(\"In this URL I use Guard  canDeactivate Guard. Do you want to leave the page?\");\r\n    }\r\n    else{\r\n      return true;\r\n    };    \r\n  };   \r\n}\r\n","import {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, ActivatedRoute} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\n\r\nexport class ColorsGuardService implements CanActivate{\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean{\r\n    return confirm('In this URL I use Guard CanActivate. Do you really want to go Products?')\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n","import { Injectable, ɵConsole } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\n\r\nimport { Observable, throwError} from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Http } from '@angular/http';\r\nimport { Colors } from '../colors/colors.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ColorsService {\r\n\r\n  private url:string='http://localhost:3000/api/colors/';\r\n  private delUrl:string='http://localhost:3000/api/delete/';\r\n  private putUrl = 'http://localhost:3000/api/put/'\r\n  \r\n\r\n  constructor( private http: HttpClient )  { }\r\n\r\n  getItems(): Observable<any>{\r\n    return this.http.get(this.url)\r\n    .pipe(map(response=>  response), catchError(err => {  \r\n      return throwError(err)}));    \r\n  };\r\n  \r\n   \r\n  addItem(data:Colors): Observable<any>{  \r\n    return this.http.post(this.url, data).pipe(map(response=>response));\r\n  };\r\n\r\n  changeItem(data:Colors): Observable<any>{\r\n    return this.http.put(this.putUrl + data._id, data).pipe(map(response=>response));\r\n  };\r\n\r\n  deleteItem(data: String): Observable<any>{\r\n    return this.http.delete(this.delUrl + data).pipe(map(response=>{console.log(response); return response}));\r\n  }\r\n\r\n// ------------------------ test -=--------\r\n  newGetItems(url): Observable<any>{\r\n    return this.http.get(url)\r\n    // .pipe(map(response=>  response), catchError(err => {  \r\n    //   return throwError(err)}));    \r\n  };\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  constructor() { }\r\n\r\n  listPhones = [\r\n    {name:'Samsung', model:'sx-132'},\r\n    {name: 'Nokia', model:'nm-g56'}\r\n  ];\r\n  getList(){\r\n    return this.listPhones\r\n  }\r\n  addItemPhone(item){\r\n    this.listPhones.push(item);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {CanDeactivate} from \"@angular/router\";\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface ComponentCanDeactivate{\r\n  canDeactivate: () => Observable<boolean> | boolean;\r\n};\r\n\r\nexport class ExitReactFormGuardService implements CanDeactivate<ComponentCanDeactivate>{\r\n  \r\n  canDeactivate(component:ComponentCanDeactivate)  : Observable<boolean> | boolean{\r\n    return component.canDeactivate ? component.canDeactivate() : true;\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as $ from 'jquery';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogService {\r\n\r\n  constructor() { }\r\n\r\n  showHint(element: HTMLElement, textHint){\r\n    $(element).find('.message_text').text(textHint);\r\n    $(element).css('display', 'block');\r\n    setTimeout(()=>$(element).css('display', 'none'), 2000);\r\n  }\r\n  hideHint(element:HTMLElement){\r\n    $(element).css('display', 'none')\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getItem(): Observable<any> {\r\n    return this.http.get('http://localhost:3000/api/products/').pipe(map(response => response),\r\n        catchError(err => { return throwError(err) }));\r\n  }\r\n\r\n//   postItem(data): Observable<any> {\r\n//     return this.http.post('http://localhost:3000/api/products/',data ).pipe(map(response => response),\r\n//     catchError(err => { return throwError(err) }));\r\n// }\r\n\r\n}\r\n","import { Directive, HostBinding, OnInit } from '@angular/core';\r\n\r\n@Directive({\r\n      selector:'[headColor]'\r\n})\r\nexport class ColorDirective {\r\n      @HostBinding('style.color') color = 'grey';\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ColorDirective } from './shared.directive';\r\n// import { ColorDirective } from '/shared.derective';\r\n\r\n@NgModule({\r\n      declarations: [ColorDirective],\r\n      exports: [ColorDirective]\r\n})\r\nexport class SharedModule {}","module.exports = \"<div class=\\\"wrap_component\\\">\\r\\n    <div class=\\\"wrap_component\\\">\\r\\n        <div class=\\\"panel widget\\\">\\r\\n            <div class=\\\"panel-heading vd_bg-grey\\\">\\r\\n                <h3 class=\\\"panel-title\\\"> <span class=\\\"menu-icon\\\"> <i class=\\\"fa fa-dot-circle-o\\\"></i> </span> {{title}} </h3>\\r\\n            </div>\\r\\n            <div class=\\\"panel-body table-responsive\\\">\\r\\n                <div id=\\\"data-tables_wrapper\\\" class=\\\"dataTables_wrapper form-inline no-footer\\\">\\r\\n                    <table class=\\\"table table-striped dataTable no-footer\\\">\\r\\n                        <thead>\\r\\n                            <tr role=\\\"row\\\">\\r\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"data-tables\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\">NPM</th>\\r\\n                                <th class=\\\"sorting_asc\\\" tabindex=\\\"0\\\" aria-controls=\\\"data-tables\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\">Description</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr class=\\\"gradeA\\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">ng g module my-module</td>\\r\\n                                <td class=\\\"center\\\">create new module</td>\\r\\n                            </tr>\\r\\n                            <tr class=\\\"gradeA\\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">ng g enum my-enum</td>\\r\\n                                <td class=\\\"center\\\">create new enum</td>\\r\\n                            </tr>\\r\\n                            <tr class=\\\"gradeA\\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">ng g interface my-interface</td>\\r\\n                                <td class=\\\"center\\\">create new interface</td>\\r\\n                            </tr>\\r\\n                            <tr class=\\\"gradeA\\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">ng g guard my-guard</td>\\r\\n                                <td class=\\\"center\\\">create new guard</td>\\r\\n                            </tr>\\r\\n                            <tr class=\\\"gradeA\\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">ng g class new-class</td>\\r\\n                                <td class=\\\"center\\\">create new class</td>\\r\\n                            </tr>\\r\\n                            <tr class=\\\"gradeA\\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">ng g service my-service</td>\\r\\n                                <td class=\\\"center\\\">create new service</td>\\r\\n                            </tr>\\r\\n                            <tr class=\\\"gradeA\\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">ng g pipe my-pipe</td>\\r\\n                                <td class=\\\"center\\\">create new pipe</td>\\r\\n                            </tr>\\r\\n                            <tr class=\\\"gradeA\\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">ng g directive my-directive</td>\\r\\n                                <td class=\\\"center\\\">create new directive</td>\\r\\n                            </tr>\\r\\n\\r\\n                            <tr class=\\\"gradeA\\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">ng g component my-component</td>\\r\\n                                <td class=\\\"center\\\">create new component</td>\\r\\n                            </tr>\\r\\n                            <tr class=\\\"gradeA\\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">npm install webpack webpack-dev-server typescript -g</td>\\r\\n                                <td class=\\\"center\\\">it is recommended to avoid mistakes</td>\\r\\n                            </tr>\\r\\n                            <tr class=\\\"gradeA\\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">npm install -g @angular/cli or npm i @angular/cli@6.0.0</td>\\r\\n                                <td class=\\\"center\\\">install global angular or need version</td>\\r\\n                            </tr>\\r\\n                            <tr class=\\\"gradeA \\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">ng serve or npm run start</td>\\r\\n                                <td class=\\\"center\\\">run angular server</td>\\r\\n                            </tr>\\r\\n                            <tr class=\\\"gradeA \\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">npm uninstall -g angular-cli</td>\\r\\n                                <td class=\\\"center\\\">uninstall global angular</td>\\r\\n                            </tr>\\r\\n                            <tr class=\\\"gradeA \\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">npm cache clean </td>\\r\\n                                <td class=\\\"center\\\">clean cache</td>\\r\\n                            </tr>\\r\\n                            <tr class=\\\"gradeA \\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">ng serve --port 5000 </td>\\r\\n                                <td class=\\\"center\\\">run server on localhost port 5000</td>\\r\\n                            </tr>\\r\\n                            <tr class=\\\"gradeA \\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">npm install --save bootstrap jquery</td>\\r\\n                                <td class=\\\"center\\\">install bootstrap and jquery after need to register the paths in the file angular.json </td>\\r\\n                            </tr>\\r\\n                            <tr class=\\\"gradeA \\\" role=\\\"row\\\">\\r\\n                                <td class=\\\"center\\\">ng --version</td>\\r\\n                                <td class=\\\"center\\\">current version</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-table-comands',\r\n  templateUrl: './table-comands.component.html'\r\n})\r\nexport class TableComandsComponent implements OnInit {\r\n\r\n  title:string=\"NPM COMMANDS\"\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"wrap_component\\\">\\r\\n    <h1>{{title}}</h1>\\r\\n    <h2>Test Service</h2>\\r\\n    <p>\\r\\n        Display text using the 'TestService'\\r\\n    </p>\\r\\n    <button (click)=\\\"changeText()\\\">{{serviceVisible}}</button>\\r\\n    <br>\\r\\n    <div class=\\\"alert alert-primary\\\" role=\\\"alert\\\" *ngIf=\\\"serviceVisible\\\">This Item is Visible</div>\\r\\n    <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"!serviceVisible\\\">Nothing to show</div>\\r\\n    <h3 class=\\\"text-primary\\\">{{serviceObservable}}</h3>\\r\\n    <hr>\\r\\n\\r\\n    <h2>Test Directive</h2>\\r\\n    <p>Change class for Attribute Directives </p>\\r\\n\\r\\n\\r\\n    <div [app-test]=\\\"testVar === true ? 'bg-warning' : 'bg-info'\\\">\\r\\n        <p>'TestDirective' Attribute Directives\\r\\n        </p>\\r\\n        <div>\\r\\n            <span>Select class </span>\\r\\n            <button style=\\\"min-width:90px;\\\" (click)=\\\"testVar=!testVar\\\">{{testVar === false ? 'bg-warning' : 'bg-info'}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, SimpleChanges } from '@angular/core';\r\nimport { TestService } from './test-service';\r\n\r\n@Component({\r\n  selector: 'app-test-component',\r\n  templateUrl: './test-component.html'\r\n})\r\nexport class TestComponent implements OnInit {\r\n  title='Unit test Component';\r\n  serviceVisible:boolean;  // getVisible from service\r\n  serviceObservable:string;  // geObservable from servicet \r\n  testVar:boolean=false;  \r\n  nativeElement: any;\r\n\r\n  constructor(private testService:TestService) { }\r\n\r\n  ngOnInit() {\r\n    this.serviceVisible = this.testService.getVisible();\r\n    this.testService.getObservable().subscribe(text=> {\r\n      this.serviceObservable = text;\r\n    })\r\n  }\r\n\r\n  changeText(){\r\n    this.serviceVisible == false ? this.testService.showItem()  : this.testService.hideItem() ;\r\n    this.serviceVisible = this.testService.getVisible();\r\n  }\r\n}\r\n\r\n ","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { of } from 'rxjs';\r\nimport { delay } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestService {\r\n\r\n  constructor() { }\r\n\r\n  private isVisible:boolean=false;\r\n\r\n  showItem(){\r\n    this.isVisible=true;\r\n  }\r\n\r\n  hideItem(){\r\n    this.isVisible=false;\r\n  }\r\n\r\n  getVisible(){\r\n    return this.isVisible;\r\n  }\r\n\r\n  getObservable():Observable<string>{\r\n    return of('Hello from TestService  with a 3s delay').pipe(delay(3000))\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, SimpleChange } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[app-test]'\r\n})\r\nexport class TestDirective {\r\n\r\n  constructor(private element:ElementRef) { }\r\n  @Input('app-test') appTest;\r\n  bgClass:string ='bg-success';\r\n\r\n  ngOnInit(){\r\n    this.element.nativeElement.setAttribute(\"style\", \"color:white; border: 2px solid black; padding:5px 15px\")\r\n  }\r\n\r\n    ngOnChanges(changes: {[property: string]: SimpleChange }) {\r\n      let change = changes['appTest'];\r\n      let currentClass = change.currentValue;\r\n      let previousClass = change.previousValue;\r\n      if(change.firstChange){\r\n        this.element.nativeElement.classList.add(currentClass);\r\n      } else{\r\n        this.element.nativeElement.classList.add(currentClass);\r\n        this.element.nativeElement.classList.remove(previousClass);\r\n      } \r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}